import React, { useState } from "react";
import {
  Box,
  Button,
  useTheme,
  Snackbar,
  Typography,
  Alert,
} from "@mui/material";
import Header from "../../components/Header";
import { tokens } from "../../theme";
import useMediaQuery from "@mui/material/useMediaQuery";
import AccountTreeIcon from "@mui/icons-material/AccountTree";

const BotIntegration = () => {
  const theme = useTheme();
  const colors = tokens(theme.palette.mode);
  const isNonMobile = useMediaQuery("(min-width:768px)");

  const [openSnackbar, setOpenSnackbar] = useState(false);

  const handleCloseSnackbar = () => {
    setOpenSnackbar(false);
  };

  const [loadingSnippet, setLoadingSnippet] = useState(false);
  const [snippetData, setSnippetData] = useState("");
  const [summaryId, setSummaryId] = useState(null);

  const [snackbarMessage, setSnackbarMessage] = useState("");
  const [snackbarSeverity, setSnackbarSeverity] = useState("success");

  const fetchSnippet = async (summaryId) => {
    setLoadingSnippet(true);
    const token = localStorage.getItem("authToken");

    if (!token) {
      setSnackbarMessage("Authorization token is missing. Please log in.");
      setSnackbarSeverity("error");
      setOpenSnackbar(true);
      setLoadingSnippet(false);
      return;
    }

    try {
      const response = await fetch(
        `https://app.medicarebot.live/generate_snippet/${summaryId}`,
        {
          method: "GET",
          headers: {
            Authorization: `Bearer ${token}`,
          },
        }
      );

      if (response.ok) {
        const data = await response.json();
        setSnippetData(data.snippet); // Assuming the server returns a "snippet" field
        setSnackbarMessage("Snippet fetched successfully!");
        setSnackbarSeverity("success");
      } else {
        const errorData = await response.json();
        setSnackbarMessage(
          errorData.message || "An error occurred while fetching the snippet."
        );
        setSnackbarSeverity("error");
      }
    } catch (error) {
      setSnackbarMessage("Unable to fetch snippet. Please try again.");
      setSnackbarSeverity("error");
    } finally {
      setOpenSnackbar(true);
      setLoadingSnippet(false);
    }
  };

  return (
    <Box m="20px">
      <Box>
        <Header
          title="BOT INTEGRATION"
          subtitle="Let’s integrate your bot into your platform or website"
        />
      </Box>

      {/* Code Integration */}
      <Box>
        <Box mt={6}>
          <Typography variant="h5" color={colors.grey[100]}>
            Copy and paste the following code snippet into your website’s
            &lt;body&gt; or &lt;head&gt; section
          </Typography>
        </Box>

        <Box
          sx={{
            height: "200px",
            overflow: "auto",
            // padding: "1em",
            m: "1em 0",
            width: "70%",
            borderRadius: "4px",
            backgroundColor: colors.primary[400],
          }}
        >
          <Box
            sx={{
              backgroundColor: colors.primary[400],
              display: "flex",
              gap: "1em",
              alignItems: "center",
              justifyContent: "flex-end",
              padding: ".75em 2em",
              width: "100%",
              borderBottom: `1px solid ${colors.grey[700]}`,
            }}
          >
            <Box>Click here to copy the code</Box>
            <Box
              sx={{
                display: "flex",
                alignItems: "center",
              }}
            >
              <svg
                width="18"
                height="18"
                viewBox="0 0 26 26"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g clip-path="url(#clip0_205_901)">
                  <path
                    d="M17.7125 5.6875H3.4125C1.97656 5.6875 0.8125 6.85156 0.8125 8.2875V22.5875C0.8125 24.0234 1.97656 25.1875 3.4125 25.1875H17.7125C19.1484 25.1875 20.3125 24.0234 20.3125 22.5875V8.2875C20.3125 6.85156 19.1484 5.6875 17.7125 5.6875Z"
                    fill={colors.grey[100]}
                  />
                  <path
                    d="M22.5875 0.8125H8.2875C7.5986 0.814643 6.93852 1.08926 6.45139 1.57639C5.96426 2.06352 5.68964 2.7236 5.6875 3.4125V4.875H18.3056C19.0527 4.87714 19.7686 5.17487 20.2969 5.70314C20.8251 6.23142 21.1229 6.94729 21.125 7.69438V20.3125H22.5875C23.2764 20.3104 23.9365 20.0357 24.4236 19.5486C24.9107 19.0615 25.1854 18.4014 25.1875 17.7125V3.4125C25.1854 2.7236 24.9107 2.06352 24.4236 1.57639C23.9365 1.08926 23.2764 0.814643 22.5875 0.8125Z"
                    fill={colors.grey[100]}
                  />
                </g>
                <defs>
                  <clipPath id="clip0_205_901">
                    <rect width="26" height="26" fill={colors.grey[100]} />
                  </clipPath>
                </defs>
              </svg>
            </Box>
          </Box>
          <Box
            sx={{
              padding: "1em 2em",
              overflow: "auto",
            }}
          >
            {snippetData ||
              "No snippet fetched yet. Click a button to fetch one."}
          </Box>
        </Box>

        <Box mt={6} mb={2}>
          <Typography variant="h5" color={colors.grey[100]}>
            Need help adding code to your platform?
          </Typography>
        </Box>
        <Box
          sx={{
            backgroundColor: colors.primary[400],
            display: "flex",
            gap: "1em",
            borderRadius: "4px",
            alignItems: "center",
            justifyContent: "start",
            padding: ".75em 1.5em",
            width: "70%",
            marginBottom: ".5em",
          }}
        >
          <Box
            sx={{
              display: "flex",
              alignItems: "center",
            }}
          >
            <svg
              width="32"
              height="33"
              viewBox="0 0 32 33"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M4.88835 16.4998C4.88762 20.7576 7.31991 24.6413 11.1507 26.4994L5.85026 11.9781C5.21484 13.4008 4.88712 14.9417 4.88835 16.4998ZM16.1947 17.4718L12.8603 27.1587C15.0989 27.8179 17.488 27.7559 19.6893 26.9815C19.6584 26.9328 19.6317 26.8816 19.6097 26.8283L16.1947 17.4718ZM23.5003 15.9395C23.4854 14.8529 23.1683 13.7918 22.5843 12.8753C21.9871 12.1239 21.6094 11.222 21.4928 10.2693C21.4659 9.21045 22.3 8.32894 23.3587 8.29737C23.408 8.29737 23.4547 8.30331 23.5026 8.30631C18.9786 4.16227 11.9518 4.47038 7.80786 8.99431C7.4069 9.43197 7.04175 9.90105 6.71582 10.3971C6.97656 10.4054 7.22234 10.4106 7.43083 10.4106C8.59277 10.4106 10.3923 10.2692 10.3923 10.2692C10.6455 10.2546 10.8627 10.448 10.8774 10.7013C10.8916 10.9475 10.7087 11.1611 10.4632 11.1849C10.4632 11.1849 9.861 11.2554 9.19174 11.2904L13.2376 23.3258L15.6696 16.0334L13.9385 11.2905C13.3398 11.2554 12.7731 11.185 12.7731 11.185C12.5207 11.1606 12.3358 10.9361 12.3601 10.6837C12.3839 10.438 12.5975 10.255 12.8438 10.2693C12.8438 10.2693 14.6783 10.4106 15.7699 10.4106C16.9319 10.4106 18.7317 10.2693 18.7317 10.2693C18.9849 10.2545 19.2022 10.4478 19.217 10.7009C19.2314 10.9475 19.0483 11.1614 18.8025 11.185C18.8025 11.185 18.1998 11.2555 17.531 11.2905L21.5463 23.2342L22.6925 19.6021C23.1401 18.4276 23.4123 17.1934 23.5003 15.9395ZM25.8244 12.312C25.8051 13.681 25.518 15.033 24.9792 16.2917L21.5856 26.1035C26.7904 23.0759 28.6369 16.4536 25.7496 11.1696C25.8001 11.5483 25.8251 11.9299 25.8244 12.312ZM15.9993 3.16699C8.63558 3.16699 2.66602 9.13655 2.66602 16.5003C2.66602 23.8641 8.63558 29.8337 15.9993 29.8337C23.3631 29.8337 29.3327 23.8641 29.3327 16.5003C29.3327 9.13655 23.3631 3.16699 15.9993 3.16699ZM20.8776 28.049C16.9757 29.7003 12.5032 29.2655 8.99235 26.8936C6.97706 25.533 5.3995 23.6173 4.45052 21.3786C2.79883 17.4766 3.23372 13.004 5.60612 9.49333C6.96647 7.47786 8.88216 5.90014 11.1211 4.95158C15.023 3.3003 19.4955 3.73503 23.0063 6.10694C25.0216 7.46754 26.5992 9.38322 27.5482 11.622C29.1999 15.5239 28.765 19.9966 26.3926 23.5072C25.0322 25.5227 23.1165 27.1004 20.8776 28.049Z"
                fill={colors.grey[100]}
              />
            </svg>
          </Box>
          <Box>Add this snippet to your header.php file</Box>
        </Box>

        <Box
          sx={{
            backgroundColor: colors.primary[400],
            display: "flex",
            gap: "1em",
            borderRadius: "4px",
            alignItems: "center",
            justifyContent: "start",
            padding: ".75em 1.5em",
            width: "70%",
            marginBottom: ".5em",
          }}
        >
          <Box
            sx={{
              display: "flex",
              alignItems: "center",
            }}
          >
            <svg
              width="32"
              height="33"
              viewBox="0 0 32 33"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M25.1054 7.84111C25.0847 7.69033 24.9526 7.60689 24.8434 7.5977C24.7345 7.58861 22.4286 7.4177 22.4286 7.4177C22.4286 7.4177 20.8272 5.82784 20.6515 5.65187C20.4756 5.476 20.1321 5.52949 19.9988 5.56873C19.9792 5.57452 19.6489 5.67645 19.1026 5.8455C18.5677 4.30614 17.6236 2.89154 15.9626 2.89154C15.9168 2.89154 15.8696 2.8934 15.8224 2.89608C15.35 2.2714 14.7649 2 14.2595 2C10.3905 2 8.54201 6.83669 7.96245 9.29454C6.45903 9.7604 5.391 10.0916 5.25458 10.1344C4.4154 10.3977 4.38886 10.4241 4.27867 11.2149C4.19575 11.8135 2 28.7943 2 28.7943L19.1097 32L28.3804 29.9945C28.3804 29.9945 25.1259 7.99188 25.1054 7.84111ZM18.1569 6.13796L16.7092 6.58606C16.7097 6.48402 16.7102 6.38364 16.7102 6.27387C16.7102 5.31717 16.5774 4.54687 16.3644 3.93623C17.2202 4.04363 17.7901 5.01737 18.1569 6.13796ZM15.3027 4.12594C15.5407 4.72212 15.6954 5.57772 15.6954 6.73229C15.6954 6.79136 15.6949 6.84537 15.6943 6.9C14.7528 7.19164 13.7297 7.50827 12.7043 7.82593C13.2801 5.60395 14.3593 4.53076 15.3027 4.12594ZM14.1532 3.03777C14.3202 3.03777 14.4885 3.09447 14.6495 3.20527C13.4095 3.78876 12.0804 5.2583 11.5191 8.19295L9.15564 8.92494C9.81307 6.68654 11.3742 3.03777 14.1532 3.03777Z"
                fill="#95BF46"
              />
              <path
                d="M24.8442 7.59741C24.7353 7.58832 22.4294 7.41741 22.4294 7.41741C22.4294 7.41741 20.828 5.82755 20.6522 5.65158C20.5865 5.58611 20.4977 5.55254 20.405 5.53809L19.1113 31.9995L28.3811 29.9942C28.3811 29.9942 25.1267 7.9916 25.1062 7.84082C25.0854 7.69005 24.9534 7.6066 24.8442 7.59741Z"
                fill="#5E8E3E"
              />
              <path
                d="M15.9631 12.7205L14.8199 16.1207C14.8199 16.1207 13.8184 15.5862 12.5907 15.5862C10.7909 15.5862 10.7004 16.7157 10.7004 17.0003C10.7004 18.5533 14.7486 19.1483 14.7486 22.786C14.7486 25.6479 12.9334 27.4908 10.4859 27.4908C7.54885 27.4908 6.04688 25.6629 6.04688 25.6629L6.83328 23.0646C6.83328 23.0646 8.37718 24.3901 9.67995 24.3901C10.5312 24.3901 10.8775 23.7198 10.8775 23.2301C10.8775 21.2044 7.55628 21.114 7.55628 17.7853C7.55628 14.9836 9.56717 12.2725 13.6263 12.2725C15.1904 12.2725 15.9631 12.7205 15.9631 12.7205Z"
                fill="white"
              />
            </svg>
          </Box>
          <Box>Use the custom code editor into your theme settings</Box>
        </Box>

        <Box
          sx={{
            backgroundColor: colors.primary[400],
            display: "flex",
            gap: "1em",
            borderRadius: "4px",
            alignItems: "center",
            justifyContent: "start",
            padding: ".75em 1.5em",
            width: "70%",
          }}
        >
          <Box
            sx={{
              display: "flex",
              alignItems: "center",
            }}
          >
            <svg
              width="32"
              height="33"
              viewBox="0 0 32 33"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M4.57809 18.5343C4.67546 18.1595 4.77682 17.7874 4.87418 17.4113C5.25297 15.9669 5.62775 14.5171 6.01453 13.0713C6.15457 12.4818 6.35997 11.963 6.62672 11.4842L6.61071 11.5162C6.89747 11.0214 7.38828 10.6733 7.96579 10.5839L7.97646 10.5826C8.11117 10.5519 8.26722 10.5346 8.42727 10.5346C9.05012 10.5346 9.6103 10.7986 10.0037 11.2214L10.0051 11.2228C10.1865 11.4308 10.3292 11.6776 10.4185 11.9483L10.4225 11.963C10.6693 12.6192 10.9254 13.4634 11.1361 14.3264L11.1694 14.4918C11.5171 15.8095 11.8665 17.1281 12.2178 18.4476C12.2258 18.4783 12.2178 18.5143 12.2618 18.541C12.3365 18.2449 12.4165 17.9515 12.4912 17.6594C12.9446 15.8926 13.3972 14.1277 13.8489 12.3644C13.9316 12.0337 14.017 11.7042 14.1037 11.3735C14.169 11.1267 14.269 10.912 14.3998 10.7186L14.3944 10.7266C14.5931 10.4319 14.9012 10.2251 15.26 10.1638L15.268 10.1624C15.6855 10.0757 16.167 10.0251 16.6604 10.0237H16.6618C16.7591 10.0237 16.7765 10.0464 16.7551 10.1384C16.3408 11.7202 15.9282 13.3021 15.5174 14.8839C14.9092 17.2233 14.2997 19.5613 13.6889 21.898C13.6275 22.1274 13.5702 22.3608 13.5088 22.5889C13.4955 22.6329 13.4901 22.6716 13.4301 22.6769C13.3368 22.6863 13.2287 22.6916 13.118 22.6916C12.7673 22.6916 12.4285 22.6396 12.1097 22.5436L12.1337 22.5502C11.971 22.4929 11.8336 22.4035 11.7203 22.2901C11.5602 22.1408 11.4122 21.9847 11.2735 21.822L11.2668 21.814C11.1161 21.5886 10.984 21.3298 10.884 21.0551L10.876 21.0298C10.5226 20.1775 10.2025 19.1585 9.97041 18.1062L9.94773 17.9808C9.57295 16.487 9.19017 14.9932 8.81139 13.4995C8.78738 13.4061 8.7487 13.3234 8.69535 13.2514L8.69668 13.2527C8.63933 13.15 8.52997 13.0807 8.40593 13.0807C8.40326 13.0807 8.40193 13.0807 8.39926 13.0807C8.24855 13.0953 8.12584 13.1967 8.0805 13.3327L8.07916 13.3354C7.95112 13.7409 7.85909 14.1543 7.74839 14.5651C7.30292 16.283 6.87079 18.0062 6.41332 19.72C6.27728 20.2308 6.05188 20.711 5.87982 21.2138C5.69577 21.6953 5.38767 22.0941 4.99289 22.3822L4.98622 22.3875C4.80616 22.5262 4.5861 22.6196 4.34469 22.6476H4.33802C4.13262 22.6756 3.89388 22.6903 3.65248 22.6903C3.58046 22.6903 3.50977 22.6889 3.43775 22.6863H3.44842C3.36972 22.6863 3.34172 22.6556 3.31638 22.5796C2.88958 20.9586 2.45922 19.339 2.02531 17.7207C1.46425 15.601 0.899638 13.4772 0.331464 11.3495L0.0140342 10.1464C0.00603173 10.1064 -0.0286455 10.0491 0.0540464 10.0411C0.194089 10.0211 0.355472 10.0104 0.519522 10.0104C1.05168 10.0104 1.55717 10.1291 2.00931 10.3412L1.98797 10.3318C2.30007 10.4945 2.5348 10.772 2.6375 11.1067L2.64017 11.1161C2.86957 11.863 3.04162 12.6179 3.23502 13.3714C3.67515 15.0724 4.11262 16.7733 4.54742 18.4743C4.55142 18.497 4.55809 18.5183 4.56609 18.5383L4.56476 18.537L4.57809 18.5343ZM20.4563 22.7143C20.5883 22.5155 20.707 22.3395 20.8271 22.1594C22.1074 20.2513 23.3878 18.3449 24.6682 16.4404C24.6829 16.4217 24.6922 16.3977 24.6922 16.3723C24.6922 16.3417 24.6802 16.315 24.6589 16.295C23.5972 14.7176 22.5369 13.1402 21.4779 11.5629L20.5176 10.1184C20.5043 10.0958 20.4736 10.0744 20.4829 10.0304L21.1351 10.0704C21.5406 10.0971 21.9381 10.1238 22.3382 10.1451C22.6636 10.1851 22.953 10.3172 23.1864 10.5132L23.1838 10.5105C23.3945 10.6706 23.5719 10.8627 23.7119 11.0787L23.7173 11.0881C24.4081 12.1364 25.091 13.19 25.8099 14.217C26.13 14.6705 26.2674 14.6265 26.6075 14.2917C26.7755 14.093 26.9302 13.8702 27.0636 13.6342L27.0743 13.6128C27.6691 12.7272 28.256 11.8336 28.8628 10.956C29.2003 10.4839 29.7191 10.1611 30.3153 10.0891L30.3246 10.0878C30.6914 10.0464 31.1169 10.0237 31.5463 10.0237C31.685 10.0237 31.8237 10.0264 31.9611 10.0304H31.9411C32.0478 10.0304 31.9811 10.0878 31.9598 10.1184C31.6637 10.5586 31.3703 11 31.0702 11.4402C29.9854 13.0602 28.9015 14.6754 27.8185 16.2856C27.7998 16.3083 27.7878 16.339 27.7878 16.371C27.7878 16.4083 27.8025 16.4417 27.8265 16.4657C29.2012 18.5099 30.5745 20.5541 31.9464 22.5982C31.9651 22.6289 32.0078 22.6596 31.9945 22.6916C31.9811 22.7236 31.9198 22.7103 31.8878 22.7103C31.7691 22.7143 31.6303 22.7169 31.4903 22.7169C31.0995 22.7169 30.7127 22.6983 30.3313 22.6636L30.3806 22.6676C29.8151 22.5969 29.3216 22.3342 28.9589 21.946L28.9575 21.9447C28.7801 21.7313 28.6148 21.4939 28.472 21.2418L28.4587 21.2178C27.8812 20.3549 27.309 19.4906 26.7315 18.6224C26.6408 18.481 26.5261 18.3636 26.3927 18.2729L26.3887 18.2702C26.3447 18.2302 26.2861 18.2062 26.2207 18.2062C26.1553 18.2062 26.0967 18.2302 26.0526 18.2716C25.9553 18.3396 25.8739 18.4236 25.8086 18.5197L25.8059 18.5237C25.079 19.5626 24.4055 20.639 23.6999 21.6953C23.3652 22.1888 22.8477 22.5369 22.2461 22.6409L22.2328 22.6422C21.9474 22.6916 21.618 22.7183 21.2819 22.7183C21.1872 22.7183 21.0925 22.7156 20.9991 22.7116H21.0124L20.4563 22.7143ZM19.5173 12.0697V12.2417C19.5173 15.1671 19.52 18.0924 19.5253 21.0178C19.5253 21.0338 19.5267 21.0511 19.5267 21.0698C19.5267 21.67 19.1959 22.1941 18.7064 22.4675L18.6984 22.4715C18.5277 22.5809 18.3236 22.6556 18.1049 22.6783H18.0982C17.8955 22.7009 17.6621 22.7129 17.4247 22.7129C17.4113 22.7129 17.3967 22.7129 17.3833 22.7129H17.386C17.2406 22.7129 17.2406 22.7129 17.2406 22.5716C17.2406 20.9897 17.2406 19.4079 17.2326 17.8261C17.2326 16.495 17.2193 15.1693 17.2326 13.8382C17.2446 13.5862 17.386 13.3714 17.5914 13.2541L17.5954 13.2527C17.7901 13.1247 18.0049 13.0393 18.2076 12.926C18.613 12.7299 18.9585 12.5245 19.2839 12.2938L19.2612 12.3098C19.3359 12.2391 19.4146 12.1604 19.52 12.067L19.5173 12.0697ZM17.2139 12.6352C17.2139 12.6192 17.2139 12.6005 17.2139 12.5818C17.2139 12.2057 17.262 11.8416 17.3527 11.4948L17.346 11.5242C17.466 11.0894 17.7141 10.7239 18.0475 10.4599L18.0515 10.4572C18.3596 10.2425 18.7317 10.0971 19.1332 10.0531L19.1439 10.0517C19.2626 10.0291 19.3813 10.0211 19.5 10.0037C19.5973 9.98505 19.624 10.0384 19.628 10.1224C19.628 10.1411 19.6294 10.1651 19.6294 10.1878C19.6294 10.3465 19.6147 10.5025 19.5867 10.6546L19.5893 10.6386C19.5013 11.1761 19.2559 11.6456 18.9011 12.0097C18.6984 12.2004 18.4543 12.3498 18.1836 12.4418L18.1702 12.4458C17.8608 12.5592 17.5927 12.7032 17.35 12.8793L17.3593 12.8726C17.3246 12.8993 17.2846 12.9513 17.2353 12.926C17.1859 12.9006 17.2126 12.8379 17.2086 12.7939C17.2046 12.7499 17.2126 12.6845 17.2126 12.6365L17.2139 12.6352Z"
                fill={colors.grey[100]}
              />
            </svg>
          </Box>
          <Box>Insert this code into your website’s custom settings</Box>
        </Box>

        <Button
          onClick={() => fetchSnippet(summaryId)}
          disabled={!summaryId || loadingSnippet}
          sx={{
            background: "linear-gradient(45deg, #062994, #0E72E1)",
            color: "#fff",
            // width: isNonMobile ? "50%" : "100%",
            mt: "2em",
            fontSize: "14px",
            fontWeight: "bold",
            padding: "10px 20px",
            mb: isNonMobile ? "0em" : "1em",
            transition: "all 0.5s ease",
            "&:hover": {
              opacity: ".7",
            },
          }}
        >
          <AccountTreeIcon sx={{ mr: "10px" }} />
          {loadingSnippet ? "Test Integrating..." : " Test Integration"}
        </Button>
      </Box>

      <Snackbar
        open={openSnackbar}
        autoHideDuration={6000}
        onClose={handleCloseSnackbar}
        anchorOrigin={{ vertical: "top", horizontal: "center" }}
      >
        <Alert
          onClose={handleCloseSnackbar}
          severity={snackbarSeverity}
          sx={{ width: "100%" }}
        >
          {snackbarMessage}
        </Alert>
      </Snackbar>
    </Box>
  );
};

export default BotIntegration;
